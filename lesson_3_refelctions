When would you want to use a remote repository rather than keeping all your work local?
I would want to use a remote repository when I finish a new feature and sending multiple commits at the same time to make them public.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I pull changes manually because sometimes I only need to pull updates from certain branch to local repository rather than automatically 
pulling all the updates from he remote repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A branch is always created on a single repository. 
Unlike creating a branch, cloning allows you to take an existing repository
from GitHub to your own computer and set the original repository as a remote. In this case, making changes to the cloned repository 
and pushing commits to the remote could affect the original repository.Clone can also be used on local repository. 

Fork is a lot like clone, but its advantage over clone is to make a copy of a repository on GitHub and the copy is not linked to the 
original resitory. When you make changes on your computer, you clone your version on your github and set your version as a remote.Fork works
only within the context of github.

What is the benefit of having a copy of the last known state of the remote stored locally?
The benefit is to keep pace with the updates in github without merging the updates with the local branch immediately.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When collaborating with others, pull requests allows people to work on adding different features together and getting partners feedback,
and it allows people to have flexibility on whether or not adding other people change to his own local, rather than simply pulling and 
merge everything.
